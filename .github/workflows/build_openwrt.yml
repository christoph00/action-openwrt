name: build openwrt
# Run this workflow every time a new commit pushed to your repository
on: push

jobs:
  # Set the job key. The key is displayed as the job name
  # when a job name is not provided
  build:
    # Name the Job
    name: Build Openwrt
    # Set the type of machine to run on
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 
        uses: actions/checkout@v2
      - name: Checkout openwrt source 
        uses: actions/checkout@v2
        with:
          repository: openwrt/openwrt
          path: openwrt
          ref: openwrt-19.07
      - name: Setup env
        run: |
           sudo -E apt-get -qq update
           sudo -E apt-get -qq install build-essential rsync asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf wget swig
    
      - name: Update feeds
        run: cd openwrt && ./scripts/feeds update -a

      - name: Install feeds
        run: cd openwrt && ./scripts/feeds install -a
      
      - name: Custom Settings
        run: |
          sed -i 's/192.168.1.1/192.168.10.6/g' openwrt/package/base-files/files/bin/config_generate
          
      - name: Copy Config
        run: cp NBG6817.config openwrt/.config
        
      - name: make defconfig
        run: cd openwrt && make defconfig

      - name: Download package
        id: package
        run: |
          cd openwrt
          make defconfig
          make download -j8
      
      - name: Compile the firmware
        id: compile
        run: |
          cd openwrt
          echo -e "$(nproc) thread compile"
          make -j$(nproc) || make -j1 || make -j1 V=s
          echo "::set-output name=status::success"
          
      - name: Organize files
        id: organize
        run: |
          cd openwrt/bin/targets/*/*
          rm -rf packages
          echo "::set-env name=FIRMWARE::$PWD"
          echo "::set-output name=status::success"
          
      - name: Setup SSH Keys and known_hosts
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
            mkdir -p ~/.ssh
            ssh-keyscan core.asche.co >> ~/.ssh/known_hosts
            ssh-agent -a $SSH_AUTH_SOCK > /dev/null
            ssh-add - <<< "${{ secrets.REPO_SSH_KEY }}"
      - name: rsync to server
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: rsync -avz -P openwrt/bin/targets repo@core.asche.co:public/openwrt

      #- name : Upload artifact
      #  uses: actions/upload-artifact@main
      #  with:
      #    name: OpenWrt
      #    path: openwrt/bin
